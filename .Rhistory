temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
temp <- arrange(temp$trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
bind_rows(final, temp, .id = temp$subject)
}
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
temp <- data.table::fread(here::here("data/data-raw", list[i]),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
arrange(temp, trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
bind_rows(final, temp, .id = temp$subject)
}
if (!requireNamespace('xfun')) install.packages('xfun')
xf <- loadNamespace('xfun')
cran_packages = c(
"readr",
"here",
"tibble",
"data.table",
"tidyverse"
)
if (length(cran_packages) != 0) xf$pkg_load2(cran_packages)
import::from(magrittr, '%>%')
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
# Data organized by trial order
trial_count <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
temp <- data.table::fread(here::here("data/data-raw", list[i]),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
arrange(temp, trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
bind_rows(final, temp, .id = temp$subject)
}
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
temp <- data.table::fread(here::here("data/data-raw", list[i]),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
bind_rows(final, temp, .id = temp$subject)
}
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
temp <- data.table::fread(here::here("data/data-raw", list[i]),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
dplyr::bind_rows(final, temp, .id = temp$subject)
}
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
temp <- data.table::fread(here::here("data/data-raw", list[i]),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
dplyr::bind_rows(final, temp, .id = i)
}
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
temp <- data.table::fread(here::here("data/data-raw", list[i]),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
dplyr::bind_rows(final, temp, .id = 'id')
}
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
temp <- data.table::fread(here::here("data/data-raw", list[i]),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, "trials.thisIndex")
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
dplyr::bind_rows(final, temp, .id = 'id')
}
View(final)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i])
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, "trials.thisIndex")
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
dplyr::bind_rows(final, temp, .id = 'id')
}
View(final)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
#temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, "trials.thisIndex")
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
dplyr::bind_rows(final, temp, .id = 'id')
}
View(final)
list
list[1]
data.table::fread(here::here("data/data-raw", ;list[1])
data.table::fread(here::here("data-raw", ;list[1])
data.table::fread(here::here("data/data-raw", list[1])
data.table::fread(here::here("data/data-raw", list[1]))
data.table::fread(here::here("data/data-raw", list[1]), select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
name
data.table::fread(here::here("data/data-raw", name), select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
#temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, "trials.thisIndex")
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
dplyr::bind_rows(final, temp, .id = 'id')
}
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
temp
dplyr::arrange(temp, "trials.thisIndex")
View(temp)
temp <- temp[-(1:10),]
dplyr::arrange(temp, "trials.thisIndex")
View(temp)
View(dplyr::arrange(temp, "trials.thisIndex"))
View(dplyr::arrange(temp, trials.thisIndex))
final
final
dplyr::bind_rows(final, temp, .id = 'id')
final
View(final)
dplyr::bind_rows(final, temp)
final
final <- dplyr::bind_rows(final, temp)
final
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
#temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
#temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, temp$trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
temp
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
tibble::glimpse
tibble::glimpse(temp)
name
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
#temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, temp$trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
getwd()
if (!requireNamespace('xfun')) install.packages('xfun')
xf <- loadNamespace('xfun')
cran_packages = c(
"readr",
"here",
"tibble",
"data.table",
"tidyverse"
)
if (length(cran_packages) != 0) xf$pkg_load2(cran_packages)
import::from(magrittr, '%>%')
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
# Data organized by trial order
trial_count <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
#temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, temp$trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
View(final)
View(final)
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
# Data organized by trial order
trial_count <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, temp$trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
View(final)
View(final)
