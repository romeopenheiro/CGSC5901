final <- dp$rename(final, trial_index = trials.thisIndex)
final
final <- dp$relocate(final, subject, age, gender, trial_index, strings)
final <- final %>%
dp$rename(resp_keys = resp.keys,
resp_corr = resp.corr,
resp_rt = resp.rt)
final
final <-
final %>%
dp$arrange(subject, trial_index)
View(final)
if (!requireNamespace('xfun')) install.packages('xfun')
xf <- loadNamespace('xfun')
cran_packages = c(
"readr",
"here",
"tibble",
"data.table",
"stringr"
)
if (length(cran_packages) != 0) xf$pkg_load2(cran_packages)
import::from(magrittr, '%>%')
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Remove randomization by reordering the rows by the order of the original experiment parameters
dplyr::arrange(temp, temp$trials.thisIndex)
# Remove NAs from the index column
# dp$filter(!is.na(temp$trials.thisIndex))
# Not required as we removed the practice trials
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
# <-
# final %>%
#dp$group_by(subject) %>%
#dp$arrange(subject, trials.thisIndex) %>%
final <- dp$rename(final, gender = `gender (m/f)`) #%>%
final %>% dp$count(gender)
final <-
final %>%
dp$mutate(gender = dp$case_when(
gender == "f" | gender == "F"| gender == "Female" ~ "female",
gender == "m" | gender == "M" | gender == "Male" ~ "male",
gender == "Non-binary" ~ "non-binary",
TRUE ~ as.character(gender)
))
final %>% dp$count(gender)
final %>% dp$count(trials.thisIndex)
final <- dp$rename(final, trial_index = trials.thisIndex)
final
final <- dp$relocate(final, subject, age, gender, trial_index, strings, freq)
final <- final %>%
dp$rename(resp_keys = resp.keys,
resp_corr = resp.corr,
resp_rt = resp.rt)
final
final <-
final %>%
dp$arrange(subject, trial_index)
View(final)
if (!requireNamespace('xfun')) install.packages('xfun')
xf <- loadNamespace('xfun')
cran_packages = c(
"readr",
"here",
"tibble",
"data.table"
)
if (length(cran_packages) != 0) xf$pkg_load2(cran_packages)
import::from(magrittr, '%>%')
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
# <-
# final %>%
#dp$group_by(subject) %>%
#dp$arrange(subject, trials.thisIndex) %>%
final <- dp$rename(final, gender = `gender (m/f)`) #%>%
final %>% dp$count(gender)
final <-
final %>%
dp$mutate(gender = dp$case_when(
gender == "f" | gender == "F"| gender == "Female" ~ "female",
gender == "m" | gender == "M" | gender == "Male" ~ "male",
gender == "Non-binary" ~ "non-binary",
TRUE ~ as.character(gender)
))
final %>% dp$count(gender)
final %>% dp$count(trials.thisIndex)
final <- dp$rename(final, trial_index = trials.thisIndex)
final
final <- dp$relocate(final, subject, age, gender, trial_index, strings, freq)
final <- final %>%
dp$rename(resp_keys = resp.keys,
resp_corr = resp.corr,
resp_rt = resp.rt)
final
final <-
final %>%
dp$arrange(subject, trial_index)
View(final)
getwd()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
# Setup packages
if (!requireNamespace('xfun')) install.packages('xfun')
xf <- loadNamespace('xfun')
cran_packages = c(
"readr",
"here",
"tibble",
"data.table",
"magrittr",
"import",
"dplyr"
)
if (length(cran_packages) != 0) xf$pkg_load2(cran_packages)
import::from(magrittr, '%>%')
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
# Make a list of all the csv files in the directory
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
# Rename some of the columns
final <-
final %>%
dp$rename(gender = `gender (m/f)`,
trial_index = trials.thisIndex,
resp_keys = resp.keys,
resp_corr = resp.corr,
resp_rt = resp.rt)
# Change the variables in the gender column
final <-
final %>%
dp$mutate(gender = dp$case_when(
gender == "f" | gender == "F"| gender == "Female" ~ "female",
gender == "m" | gender == "M" | gender == "Male" ~ "male",
gender == "Non-binary" ~ "non-binary",
TRUE ~ as.character(gender)
))
# Reorder the columns that makes sense to me
final <- dp$relocate(final, subject, age, gender, trial_index, strings, freq)
# Arrange the dataset by columns subject and trial_index
final <-
final %>%
dp$arrange(subject, trial_index)
View(final)
devtools::load_all()
devtools::load_all()
install.packages("magrittr")
devtools::load_all()
install.packages("import")
devtools::load_all()
renv::snapshot()
devtools::load_all()
devtools::load_all(".")
install.packages("xfun")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all()
# Setup packages
if (!requireNamespace('xfun')) install.packages('xfun')
xf <- loadNamespace('xfun')
cran_packages = c(
"readr",
"here",
"tibble",
"data.table",
"magrittr",
"import",
"dplyr",
"usethis"
)
if (length(cran_packages) != 0) xf$pkg_load2(cran_packages)
import::from(magrittr, '%>%')
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
# Make a list of all the csv files in the directory
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
# Rename some of the columns
# Arrange the dataset by columns subject and trial_index
final <-
final %>%
dp$rename(gender = `gender (m/f)`,
trial_index = trials.thisIndex,
resp_keys = resp.keys,
resp_corr = resp.corr,
resp_rt = resp.rt) %>%
dp$arrange(subject, trial_index)
# Change the variables in the gender column
final <-
final %>%
dp$mutate(gender = dp$case_when(
gender == "f" | gender == "F"| gender == "Female" ~ "female",
gender == "m" | gender == "M" | gender == "Male" ~ "male",
gender == "Non-binary" ~ "non-binary",
TRUE ~ as.character(gender)
))
# Reorder the columns that makes sense to me
final <- dp$relocate(final, subject, age, gender, trial_index, strings, freq)
View(final)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
install.packages("dplyr")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
usethis::use_pipe()
devtools::load_all(".")
usethis::use_pipe(export = TRUE)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all()
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
install.packages("devtools")
devtools::document()
library(c(here, readRDS()))
library()
library()"readr",
"here",
"tibble",
"data.table",
"magrittr",
"import",
"dplyr",
"usethis",
"readr"
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all(".")
library(readr)
library(here)
library(tibble)
library(data.table)
library(magrittr)
library(import)
library(dplyr)
#library(usethis)
library(readr)
library(devtools)
library(roxygen2)
#library(devtools)
usethis::use_pipe(export = TRUE)
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
# Make a list of all the csv files in the directory
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
# Rename some of the columns
# Arrange the dataset by columns subject and trial_index
final <-
final %>%
dp$rename(gender = `gender (m/f)`,
trial_index = trials.thisIndex,
resp_keys = resp.keys,
resp_corr = resp.corr,
resp_rt = resp.rt) %>%
dp$arrange(subject, trial_index)
# Change the variables in the gender column
final <-
final %>%
dp$mutate(gender = dp$case_when(
gender == "f" | gender == "F"| gender == "Female" ~ "female",
gender == "m" | gender == "M" | gender == "Male" ~ "male",
gender == "Non-binary" ~ "non-binary",
TRUE ~ as.character(gender)
))
# Reorder the columns that makes sense to me
final <- dp$relocate(final, subject, age, gender, trial_index, strings, freq)
# Read the data
hs_data <- readr::type_convert(final)
View(hs_data)
tibble::glimpse(hs_data)
library(readr)
library(here)
## code to prepare `DATASET` dataset
# Setup packages
# if (!requireNamespace('xfun')) install.packages('xfun')
# xf <- loadNamespace('xfun')
#
# cran_packages = c(
# "readr",
# "here",
# "tibble",
# "data.table",
# "magrittr",
# "import",
# "dplyr",
# "usethis",
# "readr"
# )
# if (length(cran_packages) != 0) xf$pkg_load2(cran_packages)
# usethis::use_pipe(export = TRUE)
# import::from(magrittr, '%>%')
library(readr)
library(here)
library(tibble)
library(data.table)
library(magrittr)
library(import)
library(dplyr)
#library(usethis)
library(readr)
library(devtools)
library(roxygen2)
#library(devtools)
usethis::use_pipe(export = TRUE)
dp <- import::from(dplyr, .all=TRUE, .into={new.env()})
# Make a list of all the csv files in the directory
list <- list.files(here::here("data/data-raw"))
# Create a data frame for holding all the data
final <- data.frame(NULL)
#Go though each file, extract the relevant info, add a subject number
for(i in 1:length(list)){
name <- list[i]
temp <- data.table::fread(here::here("data/data-raw", name),
select = c("resp.keys",
"resp.corr",
"resp.rt",
"strings",
"corrans",
"gender (m/f)",
"age",
"freq",
"trials.thisIndex",
"OS"))
# Remove the practice trials
temp <- temp[-(1:10),]
# Add subject number
temp$subject <- i
# Concatenate successive files
final <- dplyr::bind_rows(final, temp)
}
# Rename some of the columns
# Arrange the dataset by columns subject and trial_index
final <-
final %>%
dp$rename(gender = `gender (m/f)`,
trial_index = trials.thisIndex,
resp_keys = resp.keys,
resp_corr = resp.corr,
resp_rt = resp.rt) %>%
dp$arrange(subject, trial_index)
# Change the variables in the gender column
final <-
final %>%
dp$mutate(gender = dp$case_when(
gender == "f" | gender == "F"| gender == "Female" ~ "female",
gender == "m" | gender == "M" | gender == "Male" ~ "male",
gender == "Non-binary" ~ "non-binary",
TRUE ~ as.character(gender)
))
# Reorder the columns that makes sense to me
final <- dp$relocate(final, subject, age, gender, trial_index, strings, freq)
# Read the data
hs_data <- readr::type_convert(final)
usethis::use_data(hs_data, overwrite = TRUE)
devtools::load_all()
load("~/Documents/CGSC5901/data/hs_data.rda")
devtools::load_all(".")
devtools::document()
View(dp)
hs_data %>% dp$count(is.na(age))
hs_data %>% dp$count(age)
hs_data %>% dp$summarise(age)
hs_data %>% dp$summarise(mean = mean(age))
hs_data %>% dp$summarise(mean = mean(age), na.rm = TRUE)
hs_data %>% dp$summarise(mean = mean(age, na.rm = TRUE))
hs_data %>% dp$summarise(mean = mean(age, na.rm = TRUE),)
hs_data %>% dp$summarise(mean = mean(age, na.rm = TRUE), median = median(age, na.rm = TRUE))
hs_data[is.na(age),]
hs_data[is.na(age)]
hs_data[is.na(hs_data$age)]
hs_data[is.na(hs_data$age),]
hs_data[is.na(hs_data$age), "age"] <- dp$summarise(mean = mean(age, na.rm = TRUE))
hs_data[is.na(hs_data$age), ] <- dp$summarise(mean = mean(age, na.rm = TRUE))
hs_data[is.na(hs_data$age), "age"] <- dp$summarise(mean = mean(age, na.rm = TRUE))
hs_data[is.na(hs_data$age),] <- dp$summarise(mean = mean(age, na.rm = TRUE))
hs_data[is.na(hs_data$age),] <- dp$summarise(mean = mean(hs_data$age, na.rm = TRUE))
hs_data[is.na(hs_data$age),] <- dp$summarise(hs_data, mean = mean(age, na.rm = TRUE))
hs_data %>% dp$count(age)
hs_data %>% dp$count(gender)
install.packages("remotes")
remotes::install_github("romeopenheiro/assignment-1")
?assignment1
assignment1::DATASET
